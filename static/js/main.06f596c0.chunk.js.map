{"version":3,"sources":["components/Navbar.tsx","server.ts","components/Dashboard.tsx","pages/DashboardPage.tsx","components/AddBook.tsx","pages/AddBookPage.tsx","pages/EditBookPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","useState","burgerState","burgerStateSwitcher","className","href","id","to","onClick","request","url","options","fetch","then","res","ok","Error","status","statusText","json","Dashboard","bookList","setBookList","useEffect","gotten","length","map","book","title","author","category","isbn","pathname","state","method","DashboardPage","AddBook","props","setTitle","setAuthor","setCategory","isbnNumber","setIsbnNumber","history","useHistory","onSubmit","event","preventDefault","data","newBook","Object","keys","headers","body","JSON","stringify","patch","alert","push","required","type","value","onChange","target","placeholder","htmlFor","min","AddBookPage","EditBookPage","location","App","component","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06f596c0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport const Navbar: React.FC = () => {\n\n  const [burgerState, burgerStateSwitcher] = useState(true)\n\n  return (\n    <>\n  <nav>\n    <div className=\"nav-wrapper custom-wrapper purple darken-4\">\n      <a\n          href=\"/\"\n          className=\"brand-logo green-text hide-on-med-and-down\"\n      ><u>Books dashboard</u>\n      </a>\n\n      <ul id=\"nav-mobile\" className=\"right\">\n        <li><NavLink to=\"/\"> Dashboard </NavLink></li>\n        <li><NavLink to=\"add-book\"> Add a book </NavLink></li>\n      </ul>\n\n      {burgerState &&\n        <div className=\"custom-burger sidenav-trigger\"\n             onClick={() => burgerStateSwitcher(false)}\n      >\n          <i className=\"material-icons\"> Menu </i>\n        </div>\n      }\n\n      {burgerState ||\n        <div\n            className=\"custom-burger sidenav-trigger\"\n            onClick={() => burgerStateSwitcher(true)}\n        >\n          <i className=\"material-icons\"> Close </i>\n        </div>\n      }\n\n    </div>\n  </nav>\n\n  {burgerState ||\n        <div className=\"custom-mobile-menu\">\n        <ul>\n        <li\n            onClick={() => burgerStateSwitcher(true)}\n        >\n          <NavLink className=\"custom-mobile-link\" to=\"/\"> Dashboard </NavLink>\n        </li>\n\n        <li\n            onClick={() => burgerStateSwitcher(true)}\n        >\n          <NavLink className=\"custom-mobile-link\" to=\"add-book\"> Add a book </NavLink>\n        </li>\n      </ul>\n        </div>\n      }\n  </>\n)\n}\n","const BASE_URL = 'http://localhost:3000';\n\nexport const request = (url: string, options?: object) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`)\n      }\n      \n      return res.json()\n    })\n}\n\nexport const post = (url: string, data: object) => {\n  return request(url, {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport const patch = (url: string, data: object) => {\n  return request(url, {\n    method: 'PATCH',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport const remove = (url: string) => {\n  return request(url, {method: 'DELETE'})\n}","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {request} from '../server';\nimport {remove} from '../server';\n\nexport const Dashboard: React.FC = () => {\n\n  const [bookList, setBookList] = useState<any[]>([])\n\n  useEffect(() => {\n    request('/books').then(gotten => setBookList(gotten));\n    \n  }, [bookList])\n\n  if(bookList.length === 0) {\n    return (\n      <h2 className=\"center red-text\">\n        No books added to a list\n      </h2>\n    )\n  }\n\n  return (\n    <>\n    <table className=\"custom-table centered responsive-table\">\n      <thead className=\"center-text\">\n      <tr>\n        <td className=\"center-text\"> Book title </td>\n        <td className=\"center-text\"> Author name </td>\n        <td className=\"center-text\"> Category </td>\n        <td className=\"center-text\"> ISBN </td>\n        <td className=\"center-text\"> Actions </td>\n     </tr>\n      </thead>\n      <tbody>\n        {bookList.map(book => (\n          <tr key={book.id}>\n            <td>{book.title}</td>\n            <td>{book.author}</td>\n            <td>{book.category}</td>\n            <td>{book.isbn}</td>\n            <td><Link\n              to={\n                  { \n                    pathname: '/edit-book',\n                    state: {\n                             title: book.title,\n                             author: book.author,\n                             category: book.category,\n                             isbn: book.isbn,\n                             id: book.id\n                            }\n                  }\n                }\n                >\n                  <button className=\"btn mr5px\">\n                    Edit\n                  </button>\n                </Link>\n            \n            <button className=\"btn\" onClick={() => {\n              remove(`/books/${book.id}`)\n            }}>Delete</button></td>\n            </tr>\n        ))}\n\n      </tbody>\n</table>\n    </>\n  )\n}","import React from 'react';\nimport { Dashboard } from '../components/Dashboard'\n\nexport const DashboardPage: React.FC = () => {\n\n  return (\n    <Dashboard />\n  )\n}","import React, { useState, } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { post } from '../server';\nimport { patch } from '../server';\nimport './AddBookStyle.scss'\n\ninterface TodoFormProps {\n  title?: string,\n  author?: string,\n  category?: string,\n  isbnNumber?: string,\n  id?: string\n}\n\nexport const AddBook: React.FC<TodoFormProps> = (props) => {\n\n  const [title, setTitle] = useState(props ? props.title : '');\n  const [author, setAuthor] = useState(props ? props.author : '');\n  const [category, setCategory] = useState(props ? props.category : '');\n  const [isbnNumber, setIsbnNumber] = useState(props ? props.isbnNumber: '');\n  const history = useHistory()\n\n  \nconst onInputTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value)\n  }\n\nconst onInputAuthor = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAuthor(event.target.value)\n  }\n\nconst onSelectCategory = (event: React.ChangeEvent<HTMLSelectElement>) => {\n  setCategory(event.target.value)\n}\n\nconst onNumber = (event: React.ChangeEvent<HTMLInputElement>) => {\n  setIsbnNumber(event.target.value)\n}\n\nconst submitHandler = (event: any) => {\n  event.preventDefault()\n\n  const newBook = {\n    title: title,\n    author: author,\n    category: category,\n    isbn: isbnNumber\n  }\n\n  if(Object.keys(props).length === 0) {\n    post('/books', newBook);\n    setTitle('');\n    setAuthor('');\n    setCategory('');\n    setIsbnNumber('');\n  }else {\n    patch(`/books/${props.id}`, newBook);\n\n    alert('Info was updated!')\n\n    history.push('/')\n  }\n}\n\n  return (\n    <form\n    className=\"form\"\n    onSubmit={submitHandler}\n    >\n\n      <input\n        id=\"title\"\n        required\n        type=\"text\"\n        value={title}\n        onChange={onInputTitle}\n        className=\"title\"\n        placeholder=\"Enter title of your book\"\n      />\n\n      <input\n        id=\"author\"\n        required\n        type=\"text\"\n        value={author}\n        onChange={onInputAuthor}\n        className=\"author\"\n        placeholder=\"Enter author of your book\"\n      />\n\n      <br />\n\n      <label className=\"custom-label\" htmlFor=\"category\"> Book category </label>\n        <select\n        id=\"categoty\"\n        required\n        className=\"browser-default category #2d3b36\"\n        value={category}\n        onChange={onSelectCategory}\n      >\n        <option value=\"\">\n          Select a category\n        </option>\n        <option value=\"funny\">\n          Funny\n        </option>\n        <option value=\"horror\">\n          Horror\n        </option>\n        <option value=\"fantasy\">\n          Fantasy\n        </option>\n        <option value=\"detective\">\n          Detective\n        </option>\n      </select>\n\n      <input\n        id=\"isbn\"\n        required\n        value={isbnNumber}\n        onChange={onNumber}\n        type=\"number\"\n        placeholder=\"Enter ISBN number\"\n        min=\"0\"\n      />\n\n      <button\n        className=\"btn\"\n        type=\"submit\"\n      > Add a book\n      </button>\n\n    </form>\n  )\n}","import React from 'react';\nimport {AddBook} from '../components/AddBook'\n\nexport const AddBookPage: React.FC = () => {\n\n  return (\n    <>\n    <h1 className=\"custom-header green-text\"> Add a book </h1>\n    <AddBook />\n    </>\n  )\n}","import React from 'react';\nimport {AddBook} from '../components/AddBook'\n\ntype state = {\n  state: {\n    title: string,\n    author: string,\n    category: string,\n    isbn: string,\n    id: string\n  }\n}\n\ninterface EditBookProps {\n  location: state\n}\n\nexport const EditBookPage: React.FC<EditBookProps> = (props) => {\n\n\n  return (\n    <>\n    <h1 className=\"custom-header\"> Edit the book info </h1>\n    <AddBook\n      title={props.location.state.title}\n      author={props.location.state.author}\n      category={props.location.state.category}\n      isbnNumber={props.location.state.isbn}\n      id={props.location.state.id}\n    />\n    </>\n  )\n}","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport {Navbar} from './components/Navbar'\nimport {DashboardPage} from './pages/DashboardPage'\nimport {AddBookPage} from './pages/AddBookPage'\nimport {EditBookPage} from './pages/EditBookPage'\n\nimport './App.scss';\n\nconst App: React.FC = () => {\n\n    return (\n            <BrowserRouter>\n\n                <Navbar/>\n\n                <Switch>\n                    <Route\n\n                        component={DashboardPage}\n                        path=\"/\"\n                        exact\n                    />\n\n                    <Route\n                        component={AddBookPage}\n                        path=\"/add-book\"\n                    />\n\n                    <Route\n                        component={EditBookPage}\n                        path=\"/edit-book\"\n                    />\n\n                </Switch>\n            </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}